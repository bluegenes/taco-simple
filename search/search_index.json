{
    "docs": [
        {
            "location": "/",
            "text": "taco-simple\n\u00b6\n\n\nThis repository implements several simple Snakemake workflows\n(\"hello world\" style) to illustrate how to define a \n\ndahak-taco\n\nworkflow.\n\n\nSetting Up Taco\n\u00b6\n\n\nBefore you can run any of these workflows, you must first \ninstall taco. See \ndahak-taco documentation\n\nfor installation instructions. (Should be as simple as\n\npython setup.py install\n.)\n\n\nOnce taco is installed, it will be available on the \ncommand line. The commands covered in this document\nshould be run from the top level directory in \nthis repository.\n\n\nQuick Start\n\u00b6\n\n\nList Available Actions\n\u00b6\n\n\nList the available workflows and rules \ndefined by the rule files for each \ntaco-simple workflow.\n\n\ntaco ls             # List available workflows\n\ntaco ls workflow1   # List rules in workflow 1\n\ntaco ls workflow2   # List rules in workflow 2\n\n\n\n\n\nRun Workflow\n\u00b6\n\n\nInclude the \n-n\n flag to do a dry run first.\n\n\ntaco requires the \n--config-json\n and \n--params-json\n \nflags to point to the configuration and parameter\nJSON/YAML files.\n\n\ntaco -n workflow1 \\\n    --config-json=workflow-config/workflow_1_config.json \\\n    --params-json=workflow-params/workflow_1_params.json\n\n\n\n\n\nTo run the workflow:\n\n\ntaco workflow1 \\\n    --config-json=workflow-config/workflow_1_config.json \\\n    --params-json=workflow-params/workflow_1_params.json\n\n\n\n\n\nTaco Workflows In-Depth\n\u00b6\n\n\nRunning a Workflow\n\u00b6\n\n\nIf you are using an existing workflow (more common), \nyou will need to set the following:\n\n\n\n\nCreate a workflow configuration file\n\n\nCreate a workflow parameters file\n\n\n\n\nThe config file specifies the name of any target files \nor rules that taco should run.\n\n\nThe params file specifies the value of any variable that is \nused when performing the workflow. \n\n\nDefining a New Workflow\n\u00b6\n\n\nIf you are defining a new workflow (less common), \nyou will need to do the following:\n\n\n\n\nCreate a folder and Snakefile for your workflow\n\n\nCreate workflow rules files\n\n\nCreate workflow settings file\n\n\n\n\nOnce this is complete, you should be able to proceed\nto the \"Running a Workflow\" section above.\n\n\nWriting Rule Files\n - how to define rules for a taco workflow\n\n\nWriting Settings Files\n - how to define default parameter values for a taco workflow.\n\n\nDirectory \nrules/\n\u00b6\n\n\nThe rules directory contains one folder per workflow.\n\n\nEach workflow folder must include a \nSnakefile\n.\nIt is recommended to structure Snakefiles so that \nthey import individual rule files. \n\n\nIndividual rule files assemble rules using workflow \nparameters. These parameters will come from the \nuser-defined parameters file. If no parameters value\nis defined, the default value will be used from the \nworkflow \n*.settings\n file.\n\n\nworkflow-config\n Directory\n\u00b6\n\n\nThe \nworkflow-config\n directory contains workflow \nconfiguration files. These files contain the \ntarget files or rules (defined in the workflow \nSnakefile) that the user wishes to run.\n\n\nworkflow-params\n Directory\n\u00b6\n\n\nThe \nworkflow-params\n directory contains workflow\nparameter files. The workflow parameter file defines\nvalues for variables used in running the workflow\nrules.\n\n\nLinks\n\u00b6\n\n\ndahak-taco documentation\n\n\ndahak-taco github repo",
            "title": "Index"
        },
        {
            "location": "/#taco-simple",
            "text": "This repository implements several simple Snakemake workflows\n(\"hello world\" style) to illustrate how to define a  dahak-taco \nworkflow.",
            "title": "taco-simple"
        },
        {
            "location": "/#setting-up-taco",
            "text": "Before you can run any of these workflows, you must first \ninstall taco. See  dahak-taco documentation \nfor installation instructions. (Should be as simple as python setup.py install .)  Once taco is installed, it will be available on the \ncommand line. The commands covered in this document\nshould be run from the top level directory in \nthis repository.",
            "title": "Setting Up Taco"
        },
        {
            "location": "/#quick-start",
            "text": "",
            "title": "Quick Start"
        },
        {
            "location": "/#list-available-actions",
            "text": "List the available workflows and rules \ndefined by the rule files for each \ntaco-simple workflow.  taco ls             # List available workflows\n\ntaco ls workflow1   # List rules in workflow 1\n\ntaco ls workflow2   # List rules in workflow 2",
            "title": "List Available Actions"
        },
        {
            "location": "/#run-workflow",
            "text": "Include the  -n  flag to do a dry run first.  taco requires the  --config-json  and  --params-json  \nflags to point to the configuration and parameter\nJSON/YAML files.  taco -n workflow1 \\\n    --config-json=workflow-config/workflow_1_config.json \\\n    --params-json=workflow-params/workflow_1_params.json  To run the workflow:  taco workflow1 \\\n    --config-json=workflow-config/workflow_1_config.json \\\n    --params-json=workflow-params/workflow_1_params.json",
            "title": "Run Workflow"
        },
        {
            "location": "/#taco-workflows-in-depth",
            "text": "",
            "title": "Taco Workflows In-Depth"
        },
        {
            "location": "/#running-a-workflow",
            "text": "If you are using an existing workflow (more common), \nyou will need to set the following:   Create a workflow configuration file  Create a workflow parameters file   The config file specifies the name of any target files \nor rules that taco should run.  The params file specifies the value of any variable that is \nused when performing the workflow.",
            "title": "Running a Workflow"
        },
        {
            "location": "/#defining-a-new-workflow",
            "text": "If you are defining a new workflow (less common), \nyou will need to do the following:   Create a folder and Snakefile for your workflow  Create workflow rules files  Create workflow settings file   Once this is complete, you should be able to proceed\nto the \"Running a Workflow\" section above.  Writing Rule Files  - how to define rules for a taco workflow  Writing Settings Files  - how to define default parameter values for a taco workflow.",
            "title": "Defining a New Workflow"
        },
        {
            "location": "/#directory-rules",
            "text": "The rules directory contains one folder per workflow.  Each workflow folder must include a  Snakefile .\nIt is recommended to structure Snakefiles so that \nthey import individual rule files.   Individual rule files assemble rules using workflow \nparameters. These parameters will come from the \nuser-defined parameters file. If no parameters value\nis defined, the default value will be used from the \nworkflow  *.settings  file.",
            "title": "Directory rules/"
        },
        {
            "location": "/#workflow-config-directory",
            "text": "The  workflow-config  directory contains workflow \nconfiguration files. These files contain the \ntarget files or rules (defined in the workflow \nSnakefile) that the user wishes to run.",
            "title": "workflow-config Directory"
        },
        {
            "location": "/#workflow-params-directory",
            "text": "The  workflow-params  directory contains workflow\nparameter files. The workflow parameter file defines\nvalues for variables used in running the workflow\nrules.",
            "title": "workflow-params Directory"
        },
        {
            "location": "/#links",
            "text": "dahak-taco documentation  dahak-taco github repo",
            "title": "Links"
        }
    ]
}